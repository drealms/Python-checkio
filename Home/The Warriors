class Warrior: 
    def __init__(self, health = 50, attack = 5, is_alive = True): 
        self.health = health
        self.attack = attack
        self.is_alive = is_alive
        
    def is_ali(self):
            if self.health > 0:
                self.is_alive = True      
            else:
                self.is_alive = False
                
class Knight(Warrior):
    def __init__(self):
        Warrior.__init__(self)
        self.attack = 7

def fight(unit_1, unit_2):
    while unit_1.is_alive == True and unit_2.is_alive == True:
        unit_2.health -= unit_1.attack
        unit_2.is_ali()
        if unit_2.is_alive == True:
            unit_1.health -= unit_2.attack
            unit_1.is_ali()
    if unit_1.is_alive == True:
        return True
    else:
        return False

if __name__ == '__main__':
    #These "asserts" using only for self-checking and not necessary for auto-testing

    chuck = Warrior()
    bruce = Warrior()
    carl = Knight()
    dave = Warrior()
    mark = Warrior()

    assert fight(chuck, bruce) == True
    assert fight(dave, carl) == False
    assert chuck.is_alive == True
    assert bruce.is_alive == False
    assert carl.is_alive == True
    assert dave.is_alive == False
    assert fight(carl, mark) == False
    assert carl.is_alive == False

    print("Coding complete? Let's try tests!")
